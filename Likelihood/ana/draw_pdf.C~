#include <TStyle.h>
#include <TFile.h>
#include <TTree.h>
#include <TH2D.h>
#include <TCanvas.h>
#include <iostream>

void draw_pdf(double true_mom)//GeV/c
{
  int fixed_mom = (int)((true_mom -0.3) * 1000.);
    // Open the root file
    TFile *file = new TFile("/home/had/kohki/work/test_ML/Likelihood/buf/train_Kppi_Tof100Ene30.root");
    if (!file || file->IsZombie())
    {
        std::cerr << "Error opening file!" << std::endl;
        return;
    }

    // Create a canvas
    TCanvas *canvas = new TCanvas("canvas", Form("momentum: %.2f (GeV/c)", true_mom), 1800, 600);
    canvas->Divide(3, 1);

    // Set some drawing options
    gStyle->SetOptStat(0); // Disable statistics box
   
    TH2D *histogram[3];
    for (int id = 0; id < 3; ++id)
    {
        // Get the histogram corresponding to the specified id and mom_bin
        histogram[id] = dynamic_cast<TH2D *>(file->Get(Form("hpdf%d_%d", id, fixed_mom)));
	if (!histogram[id])
	{
	std::cerr << "Error getting histogram for id=!" << id << std::endl;
	continue;
	}
	double entry = histogram[id]->GetEntries();
	histogram[id]->Scale(1./entry);       
        canvas->cd(id + 1);
	if (id == 0)
	  histogram[0]->SetTitle("PDF_{P}");
        else if (id == 1) 	
	  histogram[1]->SetTitle("PDF_{#pi}");
        else if (id == 2)	
	  histogram[2]->SetTitle("PDF_{K}");

	histogram[id]->GetXaxis()->SetTitle("ToF (10ns)");
	histogram[id]->GetYaxis()->SetTitle("-dE/dx (MeV)");
	histogram[id]->GetXaxis()->SetTitleSize(0.045);
	histogram[id]->GetYaxis()->SetTitleSize(0.045);
	histogram[id]->GetXaxis()->SetRangeUser(0.1, 0.4);
        histogram[id]->Draw("colz");
	canvas->Update();
    }
    // Close the file
    // file->Close();
    canvas->SaveAs(Form("/home/had/kohki/work/test_ML/Likelihood/ana/fig/pdf_tof100_ene30_mom%f.png", true_mom));
}
